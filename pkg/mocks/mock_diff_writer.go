// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/OllieBM/eiger/pkg/operation (interfaces: DiffWriter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDiffWriter is a mock of DiffWriter interface.
type MockDiffWriter struct {
	ctrl     *gomock.Controller
	recorder *MockDiffWriterMockRecorder
}

// MockDiffWriterMockRecorder is the mock recorder for MockDiffWriter.
type MockDiffWriterMockRecorder struct {
	mock *MockDiffWriter
}

// NewMockDiffWriter creates a new mock instance.
func NewMockDiffWriter(ctrl *gomock.Controller) *MockDiffWriter {
	mock := &MockDiffWriter{ctrl: ctrl}
	mock.recorder = &MockDiffWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDiffWriter) EXPECT() *MockDiffWriterMockRecorder {
	return m.recorder
}

// AddMatch mocks base method.
func (m *MockDiffWriter) AddMatch(arg0 uint64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddMatch", arg0)
}

// AddMatch indicates an expected call of AddMatch.
func (mr *MockDiffWriterMockRecorder) AddMatch(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMatch", reflect.TypeOf((*MockDiffWriter)(nil).AddMatch), arg0)
}

// AddMiss mocks base method.
func (m *MockDiffWriter) AddMiss(arg0 byte) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddMiss", arg0)
}

// AddMiss indicates an expected call of AddMiss.
func (mr *MockDiffWriterMockRecorder) AddMiss(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMiss", reflect.TypeOf((*MockDiffWriter)(nil).AddMiss), arg0)
}

// AddMissingIndexes mocks base method.
func (m *MockDiffWriter) AddMissingIndexes(arg0 []uint64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddMissingIndexes", arg0)
}

// AddMissingIndexes indicates an expected call of AddMissingIndexes.
func (mr *MockDiffWriterMockRecorder) AddMissingIndexes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMissingIndexes", reflect.TypeOf((*MockDiffWriter)(nil).AddMissingIndexes), arg0)
}

// Flush mocks base method.
func (m *MockDiffWriter) Flush() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Flush")
	ret0, _ := ret[0].(error)
	return ret0
}

// Flush indicates an expected call of Flush.
func (mr *MockDiffWriterMockRecorder) Flush() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Flush", reflect.TypeOf((*MockDiffWriter)(nil).Flush))
}
